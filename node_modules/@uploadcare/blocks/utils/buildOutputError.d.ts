/** @type {typeof buildOutputError<import('../types').OutputFileErrorType>} */
export const buildOutputFileError: typeof buildOutputError<import('../types').OutputFileErrorType>;
/** @type {typeof buildOutputError<import('../types').OutputCollectionErrorType>} */
export const buildCollectionFileError: typeof buildOutputError<import('../types').OutputCollectionErrorType>;
/**
 * @template T
 * @param {import('../types').OutputError<T>} options
 */
declare function buildOutputError<T>({ type, message, ...payload }: import("../types").OutputError<T>): {
    type: T;
    message: string;
} & Omit<import("../types").OutputError<T>, "type" | "message">;
export {};
//# sourceMappingURL=buildOutputError.d.ts.map