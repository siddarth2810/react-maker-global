export function blockCtx(): {};
export function activityBlockCtx(fnCtx: import('./Block').Block): {
    '*currentActivity': string;
    '*currentActivityParams': {};
    '*history': never[];
    '*historyBack': null;
    '*closeModal': () => void;
};
export function uploaderBlockCtx(fnCtx: import('./Block').Block): {
    '*commonProgress': number;
    '*uploadList': never[];
    '*focusedEntry': null;
    '*uploadMetadata': null;
    '*uploadQueue': Queue;
    '*uploadCollection': null;
    /** @type {ReturnType<import('../utils/buildOutputError.js').buildCollectionFileError>[]} */
    '*collectionErrors': ReturnType<any>[];
    /** @type {import('../types').OutputCollectionState | null} */
    '*collectionState': import('../types').OutputCollectionState | null;
    /** @type {import('@uploadcare/upload-client').UploadcareGroup | null} */
    '*groupInfo': import('@uploadcare/upload-client').UploadcareGroup | null;
    /** @type {Set<string>} */
    '*uploadTrigger': Set<string>;
    '*currentActivity': string;
    '*currentActivityParams': {};
    '*history': never[];
    '*historyBack': null;
    '*closeModal': () => void;
};
import { Queue } from '@uploadcare/upload-client';
//# sourceMappingURL=CTX.d.ts.map